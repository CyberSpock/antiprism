#define HL_PROG class=curpage

#include "<<HEAD>>"
#include "<<START>>"


<<TITLE_HEAD>>

<<TOP_LINKS>>

<<USAGE_START>>
<pre class="prog_help">
<<__SYSTEM__(../src/<<BASENAME>> -h > tmp.txt)>>
#entities ON
#include "tmp.txt"
#entities OFF
</pre>
<<USAGE_END>>


<<EXAMPLES_START>>
RGB cube centroid of blue and yellow
<<CMDS_START>>
col_util -d plot -m map_blue:yellow | antiview -v 0.05
<<CMDS_END>>

HSV cylinder centroid of blue and yellow
<<CMDS_START>>
col_util -d plot -m map_blue:yellow -M hsv -r cylinder | antiview -v 0.05
<<CMDS_END>>

Blend in conic container in HSL mode and RYB mode
<<CMDS_START>>
col_util -d plot -m map_blue:yellow -M hsl -p -y -r conic | antiview -v 0.05
<<CMDS_END>>

Blend in cubic contain in HSL model and  RYB mode with different saturation modifiers
<<CMDS_START>>
col_util -d plot -m map_blue:yellow -M hsl -p -y -s 0.8,1.01,2,3 -r cube | antiview -v 0.05
<<CMDS_END>>

Compare additive and subtractive colouring in cubic container
<<CMDS_START>>
col_util -d plot -m map_red:green:blue -M hsl -p -v 1,2,3,4 | antiview -v 0.05
col_util -d plot -m map_red:green:blue -M hsl -p -v 1,2,3,4 -c | antiview -v 0.05
<<CMDS_END>>

Plot rainbow colour map in RGB cube
<<CMDS_START>>
col_util -m rainbow | antiview -v 0.03
<<CMDS_END>>

Plot rainbow colour map in HSL cylinder, hexagonal dipyramid, or
heptagonal dipyramid
<<CMDS_START>>
col_util -m rainbow -M hsl -r cylinder | antiview -v 0.03
col_util -m rainbow -M hsl -r hexagonal | antiview -v 0.03
col_util -m rainbow -M hsl -r hexagonal -S | antiview -v 0.03
<<CMDS_END>>

Display a color wheel of red green and blue
<<CMDS_START>>
col_util -d wheel -m map_red:green:blue | antiview
<<CMDS_END>>

Display rainbow colour map as a grid or as a color bars
<<CMDS_START>>
col_util -d grid -m rainbow | antiview
col_util -d grid -m rainbow -b w| antiview
<<CMDS_END>>
<<EXAMPLES_END>>


<<NOTES_START>>
<i>col_util</i> was written by
<a href="http://www.interocitors.com/polyhedra/">Roger Kaufman</a>.
<<NOTES_END>>

#include "<<END>>"
