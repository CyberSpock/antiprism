#define HL_PROG class=curpage

#include "<<HEAD>>"
#include "<<START>>"


<<TITLE_HEAD>>

<<TOP_LINKS>>

<<USAGE_START>>
<pre class="prog_help">
<<__SYSTEM__(../src/<<BASENAME>> -h > tmp.txt)>>
#entities ON
#include "tmp.txt"
#entities OFF
</pre>
<<USAGE_END>>


<<EXAMPLES_START>>
See also,
<a href="http://www.antiprism.com/examples/200_programs/650_geodesic/imagelist.html">geodesic examples with images</a>.
<p>
A Class II icosahedral geodesic sphere with a pattern frequency of 4
<<CMDS_START>>
geodesic -c 2 -f 4 ico
<<CMDS_END>>

A Class II icosahedral geodesic sphere with a final step frequency of 4
<<CMDS_START>>
geodesic -c 2 -F 4 ico
<<CMDS_END>>

A planar octahedron with a Class III 1,2 pattern repeated 3 times along
an edge
<<CMDS_START>>
geodesic -m p -c 1,2 -f 3 oct
<<CMDS_END>>
<<EXAMPLES_END>>


<<NOTES_START>>
When an input file is specified the geodesic faces are coloured
the same as the base polyhedron face they corespond to.
<p>
Geodesic faces may bridge across an edge of the base polyhedron.
If the edge belongs to only one face, or is shared by faces with
opposite orientations, the geodesic faces that bridge the edge
will not be included in the output.
<p>
All the patterns may be specified by a pair of integers. If the
integers are <i>a</i> and <i>b</i>, a triangular grid is laid out on
the polyhedron face, having
<i>(a&sup2;&nbsp;+&nbsp;ab&nbsp;+&nbsp;b&sup2;)/highest&nbsp;common&nbsp;factor(a,&nbsp;b)</i>
divisions. Taking the faces in order it is posible, starting
at a face vertex, to step <i>a</i> units in a direction between the edges, then
turn left and step another <i>b</i> units and, if the point lies on the
face, this point will be a geodesic vertex. The process can be repeated
three times from this geodesic vertex, finding the original face vertex
and up to two new geodesic vertices. The process is continued until all
the geodesic vertices covering the face have been found.
<p>

<table border=0 cellspacing="5">
<tr>
<td align="center"><b>0,6</b></td>
    <td align="center"><b>1,5</b></td>
    <td align="center"><b>2,4</b></td>
    <td align="center"><b>3,3</b></td>
    <td align="center"><b>4,2</b></td>
    <td align="center"><b>5,1</b></td>
    <td align="center"><b>6,0</b></td>
</tr>
<tr>
    <td><img src="images/geo_T06.gif" alt="" border=0 width=70 height=70></td>
    <td><img src="images/geo_T15.gif" alt="" border=0 width=70 height=70></td>
    <td><img src="images/geo_T24.gif" alt="" border=0 width=70 height=70></td>
    <td><img src="images/geo_T33.gif" alt="" border=0 width=70 height=70></td>
    <td><img src="images/geo_T42.gif" alt="" border=0 width=70 height=70></td>
    <td><img src="images/geo_T51.gif" alt="" border=0 width=70 height=70></td>
    <td><img src="images/geo_T60.gif" alt="" border=0 width=70 height=70></td>
</tr>
<tr>
    <td align="center"><i><small>F6 Class I</small></i></td>
    <td align="center"><i><small>1x 1,5 Class III</small></i></td>
    <td align="center"><i><small>2x 1,2 Class III</small></i></td>
    <td align="center"><i><small>F6 Class II</small></i></td>
    <td align="center"><i><small>2x 2,1 Class III</small></i></td>
    <td align="center"><i><small>1x 5,1 Class III</small></i></td>
    <td align="center"><i><small>F6 Class I</small></i></td>
</tr>
</table>
    
<p>
In terms of the general pattern, the Class I pattern is equivalent to
<i>0,1</i> and the Class II pattern is equivalent to <i>1,1</i>.
Any pattern <i>a,b</i> with <i>a,&nbsp;b&nbsp;&gt;&nbsp;0</i>
and <i>a&nbsp;&ne;&nbsp;b</i>
is a Class III pattern. Class III patterns are chieral, with <i>a,b</i>
and <i>b,a</i> being mirror images of each other.
<p>
A pattern given by a general integer pair has the property that if the
pattern repeat frequency is <i>f</i> then it is possible to move between
base vertices by moving <i>fa</i> vertices along one line of edges, then
turning and moving <i>fb</i> along another line of edges. This establishes
the relationship <i>F&nbsp;=&nbsp;f(a+b)</i> between the
<i>-f</i> and <i>-F</i> options.
<p>
For some patterns there will be geodesic vertices lying on the polyhedron
edges between the face vertices. There will be
<i>f x Highest&nbsp;Common&nbsp;Factor(a,&nbsp;b)</i>
steps between these geodesic vertices along each polyhedron edge.
<<NOTES_END>>

#include "<<END>>"
