#define HL_PROG class=curpage

#include "<<HEAD>>"
#include "<<START>>"


<H1><<TITLE_CURRENT>></H1>

<<CONT_S_START>>
<SMALL><A HREF="#usage">Usage</A></SMALL>
<<BARSPACE>>
<SMALL><A HREF="#examples">Examples</A></SMALL>
<<BARSPACE>>
<SMALL><A HREF="#notes">Notes</A></SMALL>
<<CONT_S_END>>


<H2><A NAME="usage">
Usage
</A></H2>

<PRE>
<<__SYSTEM__(../src/<<BASENAME>> -h > tmp.txt)>>
#entities ON
#include "tmp.txt"
#entities OFF
</PRE>


<H2><A NAME="examples">
Examples
</A></H2>

<I>cube.txt</I> is a file containg eight cube vertices &plusmn;1, ,&plusmn;1, &plusmn;1. Make the edges with
<PRE>
   conv_hull -o cube.off cube.txt
</PRE>
triangulate the output, so each square also has a diagonal edge
<PRE>
   conv_hull -Q QJ -o cube.off cube.txt
</PRE>
See
<A HREF="#notes">Notes</A>
below
<H2><A NAME="notes">
Notes
</A></H2>

The <I>conv_hull</I> program is a thin wrapper around
<A HREF="http://www.qhull.org/">Qhull</A>.
<P>
The Antiprism programs
will read three dimensional Qhull OFF output, so it is also
convenient to use the Qhull programs directly. This is
recommended if you want to use additional options. Notice that
<PRE>
   conv_hull -Q Qt -o cube.off cube.txt
   conv_hull -a -Q QJ -o cube.off cube.txt
</PRE>
Do not give the expected results.
<P>
Antiprism includes Qhull source code. The original code can be obtained from
<A HREF="http://www.qhull.org/">http://www.qhull.org/</A>.
<P>

#include "<<END>>"
