#define HL_PROG class=curpage

#include "<<HEAD>>"
#include "<<START>>"


<<TITLE_HEAD>>

<<TOP_LINKS>>

<<USAGE_START>>
<pre class="prog_help">
<<__SYSTEM__(../src/<<BASENAME>> -h > tmp.txt)>>
#entities ON
#include "tmp.txt"
#entities OFF
</pre>
<<USAGE_END>>


<<EXAMPLES_START>>
Distribute 200 points on a sphere 
<<CMDS_START>>
sph_saff 200 | antiview -v b
<<CMDS_END>>

Distribute 200 points on a sphere, start at the poles 
<<CMDS_START>>
sph_saff -p 200 | antiview -v b
<<CMDS_END>>

Distribute 200 points on a sphere, using a golden section offset
<<CMDS_START>>
sph_saff -a 222.49223595 200 | antiview -v b
<<CMDS_END>>

An attractive spiral
<<CMDS_START>>
sph_saff -a 65 500 | antiview -v b
<<CMDS_END>>
<<EXAMPLES_END>>


<<NOTES_START>>
An implementation of an
<a href="http://www.math.niu.edu/~rusin/known-math/97/spherefaq">
"Easy method for a fairly good point distribution [Saff/Kuijlaars]"
</a>
<p> 
<a href="http://www.ogre.nu/">Anton Sherwood</a> helped with
details of the algorithm. The angle offset option uses
his method for
<a href="http://www.ogre.nu/pack/pack.htm">spirals based on the
golden ratio</a>.
<p>
The output can be run through <i>conv_hull</i> to create a polyhedron.
<<NOTES_END>>

#include "<<END>>"
