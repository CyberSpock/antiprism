#define HL_PROG class=curpage

#include "<<HEAD>>"
#include "<<START>>"


<<TITLE_HEAD>>

<<TOP_LINKS>>

<<USAGE_START>>
<pre class="prog_help">
<<__SYSTEM__(../src/<<BASENAME>> -h > tmp.txt)>>
#entities ON
#include "tmp.txt"
#entities OFF
</pre>
<<USAGE_END>>


<<EXAMPLES_START>>
Make a snub cube
<<CMDS_START>>
repel -N 24 -l 15 | conv_hull -o snub_cube.off
<<CMDS_END>>

Make a snub cube in fewer iterations by not using adaptive shortening
<<CMDS_START>>
repel -N 24 -s 1 -l 15 | conv_hull -o snub_cube.off
<<CMDS_END>>
<<EXAMPLES_END>>


<<NOTES_START>>
The default adaptive shortening of travel will not always be quickest.
It is worth experimenting with specific values using option <i>-s</i>.
However, in the snub cube examples above the adaptive shortening gives
better results, producing more accurate squares.
<p>
The progress report includes the number of iterations, the greatest
distance moved by a point, the shortening factor, and the sum of all
the forces.
<p>
If adaptive shortening is used then there is also a line of figures
showing the number of times out of ten that the shortening factor
was increased.
<<NOTES_END>>

#include "<<END>>"
